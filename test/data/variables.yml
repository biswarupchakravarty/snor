- name: No variables
  template: "Hello World"
  result: "Hello World"

- name: Empty data, no variables
  template: "Hello World"
  data:
  result: "Hello World"

# Variables

- name: Simple variable
  template: Hello {{var}}
  data:
    var: World
  result: Hello World

- name: Simple variable (missing)
  template: Hello {{var2}}
  data:
    var: World
  result: "Hello "

- name: Simple name
  template: "Hello {{name}}"
  data:
    name: "John Doe"
  result: "Hello John Doe"

- name: Mismatched keys
  template: "Hello {{name}}"
  data:
    age: "123"
  result: "Hello "

- name: Numeric value
  template: "Hello {{age}}"
  data:
    age: 123
  result: "Hello 123"

- name: Weird chars
  template: "Hello {{ {{age}}"
  data:
    age: 123
  error: MatchError

- name: Weird chars
  template: "Hello {{ {{ {{age}}"
  data:
    age: 123
  error: MatchError

- name: Simple tag
  template: "{{f}}"
  data:
    f: "B"
    l: "C"
  result: "B"

- template: "{{f}} {{l}}"
  data:
    f: B
    l: C
  result: B C

# dot syntax for values
- template: "{{person.name.first}}"
  data:
    person:
      name:
        first: "John Doe"
  result: John Doe

- template: "{{person.name}}"
  data:
    person:
      name: "John Doe"
  result: "John Doe"

- template: "{{person.age}}"
  data:
    person:
      name: "John Doe"
  result: ""

- template: "{{#person}}{{name.first}}{{/person}}"
  data:
    person:
      name:
        first: "John Doe"
  result: "John Doe"

# Scoping
- name: Simple scoping
  template: Hi {{#person}}{{name}}{{/person}}
  result: Hi John Doe
  data:
    person:
      name: John Doe

- name: Simple scoping
  template: "{{#person}}Hi {{name}}!{{/person}}"
  result: Hi John Doe!
  data:
    person:
      name: John Doe

- name: Simple scoping
  template: "{{#person}}Hi {{first_name}} {{last_name}}!{{/person}}"
  result: Hi John Doe!
  data:
    person:
      first_name: John
      last_name: Doe

- name: Coming out of a scope
  template: "{{#person}}{{name}}, {{age}}{{/person}} - {{city}}"
  result: "John Doe, 123 - Amsterdam"
  data:
    person:
      name: John Doe
      age: 123
    city: Amsterdam

- name: Coming out of invalid scope is error
  template: "{{#person}}{{name}}{{/people}}"
  error: MatchError

- name: Deeply nested scope
  template: "{{#country}}{{#city}}{{#street}}{{name}}{{/street}}{{/city}}{{/country}}"
  result: Main Street
  data:
    country:
      city:
        street:
          name: Main Street

- name: Deeply nested scope, incorrect closing is error
  template: "{{#country}}{{#city}}{{#street}}{{name}}{{/city}}{{/street}}{{/country}}"
  error: MatchError
  data:
    country:
      city:
        street:
          name: Main Street

- name: unclosed scope
  template: "{{#country}}{{name}} is great"
  data:
    country:
      name: "ZooZooLand"
  error: MatchError

- name: deeply nested scope, non-existant
  template: "{{#country}}{{#city}}{{#person}}{{name}}, {{age}}{{/person}}{{/country}}{{/city}}"
  data:
  error: MatchError

- name: Scoping with dot syntax
  template: "{{#person.name}}{{first}}{{/person.name}}"
  result: John
  data:
    person:
      name:
        first: John
        last: Doe

- name: Skip missing nested property
  template: "Hello {{#a}}b{{/a}} World"
  result: "Hello  World"

- name: Deeply nested scope, prints nothing if key doesn't exist
  template: "Hello {{#country}}{{#city}}{{#person}}Details - {{name}}, {{age}}{{/person}}{{/city}}{{/country}}"
  result: "Hello "

- name: Deeply nested scope, skips only missing parts
  template: "{{#country}}{{#city}}Details - {{name}}, {{age}}{{/city}} {{membership}}{{/country}}"
  data:
    country:
      city:
        name: Amsterdam
      membership: Yes
  result: "Details - Amsterdam,  Yes"

- name: Using a key as a truthy check
  template: "{{#person}}Hello There!{{/person}}"
  result: "Hello There!"
  data:
    person:
      name: Jill

# Negative scope (unless operator)
- name: Simple negative scope
  template: "{{^person}}There's no-one here!{{/person}}"
  result: "There's no-one here!"

- name: Negative scope, key has value
  template: "{{^person}}There's no-one here!{{/person}}"
  result: ""
  data:
    person:
      name: "Adam"

- name: Combine negative and positive scopes, truthy path
  template: "{{#person}}Hello there!{{/person}}{{^person}}Empty :({{/person}}"
  result: "Hello there!"
  data:
    person:
      name: Doesn't matter

- name: Combine negative and positive scopes, falsy path
  template: "{{#person}}Hello there!{{/person}}{{^person}}Empty :({{/person}}"
  result: "Empty :("

# Looping
- name: Simple loop
  template: "{{#people}}{{name}}{{/people}}"
  result: "JohnJack"
  data:
    people:
      - name: John
      - name: Jack

- name: Simple loop with raw text
  template: "{{#people}}Hi {{name}} {{/people}}"
  result: "Hi John Hi Jack "
  data:
    people:
      - name: John
      - name: Jack

- name: Single element loop with raw text
  template: "{{#people}}Hi {{name}}{{/people}}"
  result: "Hi John"
  data:
    people:
      - name: John

- name: Simple loop with multiple variables
  template: "{{#people}}Hi {{f_name}} {{l_name}}!{{/people}}"
  result: "Hi John Doe!"
  data:
    people:
      f_name: John
      l_name: Doe

      # - name: Nested loop with variable
      #   template: "{{#people}}{{#pets}}{{type}} {{/pets}}{{/people}}"
      #   result: "cat dog "
      #   data:
      #     people:
      #       pets:
      #         - type: cat
      #         - type: dog

- name: Looping with functions
  template: "{{#people}}Hi {{upcase item='{{name}}'}}\n{{/people}}"
  result: "Hi JOHN\nHi JANE\n"
  data:
    people:
      - name: John
      - name: Jane

# Built in functions
- name: Simple upcase
  template: "{{upcase item='howdy'}}"
  result: HOWDY

- name: Upcase with data
  template: "Hey {{upcase item='{{name}}'}}"
  result: Hey DUDE
  data:
    name: dude

- name: Upcase with nested data
  template: "Hey {{upcase item='{{person.name}}'}}"
  result: Hey DUDE
  data:
    person:
      name: dude

- name: Map style args
  template: "{{multiply a='5' b='5'}}"
  result: "25"
  data:
    a: 5
    b: 5
